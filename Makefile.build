ifeq ($(device), attiny85)
    mmcu = attiny85
    partno = t85
endif
ifeq ($(device), atmega328p)
    mmcu = atmega328p
    partno = m328p
endif
ifeq ($(device), atmega1284p)
    mmcu = atmega1284p
    partno = m1284p
endif

CC = avr-gcc
OC = avr-objcopy
FL = avrdude
CPPFLAGS += -I$(avr)/include -DF_CPU=$(frequency)
CFLAGS += -std=gnu99 -O3 -fwhole-program -save-temps=obj -mmcu=$(mmcu)
OCFLAGS += -O ihex
FLFLAGS += -c $(programmer) -p $(partno)

all: flash
build: obj/$(main).elf
binary: obj/$(main).hex
flash: obj/$(main).flash

.PHONY: all build binary flash

-include obj/$(main).d

obj:
	mkdir obj
obj/%.elf: %.c | obj
	$(CC)     $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $*.c -o  obj/$*.elf
	$(CC) -MM $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $*.c -MT obj/$*.elf > obj/$*.d
obj/%.hex: obj/%.elf
	$(OC) $(OCFLAGS) obj/$*.elf obj/$*.hex
obj/%.flash: obj/%.hex
	$(FL) $(FLFLAGS) -U flash:w:obj/$*.hex
clean:
	rm -r obj

.PHONY: clean
