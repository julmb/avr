ifeq ($(device), attiny85)
    mmcu = attiny85
    partno = t85
endif
ifeq ($(device), atmega328p)
    mmcu = atmega328p
    partno = m328p
endif
ifeq ($(device), atmega1284p)
    mmcu = atmega1284p
    partno = m1284p
endif

CC = avr-gcc
OC = avr-objcopy
PR = avrdude
CPPFLAGS += -I$(avr)/modules -DF_CPU=$(frequency)
CFLAGS += -mmcu=$(mmcu) -std=gnu99 -O3 -flto -save-temps=obj
OCFLAGS += -O ihex
PRFLAGS += -c $(programmer) -p $(partno)

flash = -U flash:w:obj/$(main).hex
configure = $(if $(configuration), -U eeprom:w:$(configuration))

default: binary

.PHONY: default

build: obj/$(main).elf
binary: obj/$(main).hex
flash: obj/$(main).hex
	$(PR) $(PRFLAGS) $(flash)
configure: obj/$(main).hex
	$(PR) $(PRFLAGS) $(configure)
program: obj/$(main).hex
	$(PR) $(PRFLAGS) $(flash) $(configure)

.PHONY: build binary flash configure program

-include obj/$(main).d

obj:
	mkdir obj
obj/%.elf: %.c | obj
	$(CC)     $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $*.c -o  obj/$*.elf
	$(CC) -MM $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $*.c -MT obj/$*.elf > obj/$*.d
obj/%.hex: obj/%.elf
	$(OC) $(OCFLAGS) obj/$*.elf obj/$*.hex
clean:
	rm -r obj

.PHONY: clean
